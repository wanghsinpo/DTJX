 Prober_abort:SUB Prober_abort(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ABORT
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_abort(Status$,Error$)
 SUBEND
 Prober_abort_i:SUB Prober_abort_i(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ABORT_I
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_abort(Status$,Error$)
 SUBEND
 Prober_abort_s:SUB Prober_abort_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ABORT_S
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_abort_s(Status$,Error$)
 SUBEND
 Prober_align:SUB Prober_align(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ALIGN
  !  Vers : 1
  !  Desc : Aligns wafer and move chuck to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_align(Status$,Error$)
 SUBEND
 Prober_align_i:SUB Prober_align_i(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ALIGN_I
  !  Vers : 1
  !  Desc : Aligns wafer and move chuck to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_align(Status$,Error$)
 SUBEND
 Prober_align_s:SUB Prober_align_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ALIGN_S
  !  Vers : 1
  !  Desc : Aligns wafer and move chuck to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_align_s(Status$,Error$)
 SUBEND
 Prober_cassinfo:SUB Prober_cassinfo(INTEGER Slotno,Cassno,Wafcount,Casscount,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_CASSINFO
  !  Vers : 1
  !  Desc : Returns cassette information
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Slotno          I    -        Wafer slot position
  !      2 Cassno          I    -        Cassette number of wafer origine
  !      3 Wafcount        I    -        Remaining number of wafers in cu
  !      4 Casscount       I    -        Remaining number of cassettes
  !      5 Status          S    -        "OK" or "ERROR"
  !      6 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_cassinfo(Slotno,Cassno,Wafcount,Casscount,Status$,Error$)
 SUBEND
 Prober_cassmap:SUB Prober_cassmap(INTEGER Cassmap(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_CASSMAP
  !  Vers : 1
  !  Desc : Returns cassette map
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Cassmap         I    50       Cassette map
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_cassmap(Cassmap(*),Status$,Error$)
 SUBEND
 Prober_chkmove:SUB Prober_chkmove(REAL Xdist,Ydist,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_CHKMOVE
  !  Vers : 1
  !  Desc : Moves the chuck by X/Ydist[um] relatively
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Xdist           R    -        X(R-L) Movement distance in [um]
  !      2 Ydist           R    -        Y(F-B) Movement distance in [um]
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_chkmove(Xdist,Ydist,Status$,Error$)
 SUBEND
 Prober_clean:SUB Prober_clean(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_CLEAN
  !  Vers : 1
  !  Desc : Executes probe cleaning with cleaning plate
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_clean(Status$,Error$)
 SUBEND
 Prober_cmapodr:SUB Prober_cmapodr(Cassno$,INTEGER Slotstat(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_CMAPODR
  !  Vers : 1
  !  Desc : [UPDATE] Set cassette map of the current cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          S    -
  !      2 Slotstat        I    50       Cassette map to be set. (0:SKIP,
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_cmapodr(Cassno$,Slotstat(*),Status$,Error$)
 SUBEND
 Prober_config:SUB Prober_config(Model$,INTEGER Address,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_CONFIG
  !  Vers : 1
  !  Desc : Defines the prober model and GPIB address
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Model           S    -        Prober Model Name
  !      2 Address         I    -        Prober GPIB Address
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Logmode
   DIM Logfile$[255]
   !
   Prb_model$=Model$          ! No check
   !
   IF Address=0 OR ((Address DIV 100)>=7 AND (Address DIV 100)<=31) THEN 
     IF (Address MOD 100)>=0 AND (Address MOD 100)<=31 THEN 
       Prb_address=Address
     ELSE
       Status$="ERROR"
       Error$="#ADDRESS"
       SUBEXIT
     END IF
   ELSE
     Status$="ERROR"
     Error$="#ADDRESS"
     SUBEXIT
   END IF
   !
   Prb_init_dx=0
   Prb_init_dy=0
   Prb_init_mx=0
   Prb_init_my=0
   Prb_curr_dx=0
   Prb_curr_dy=0
   Prb_curr_mx=0
   Prb_curr_my=0
   Prb_curr_x=0
   Prb_curr_y=0
   !
   Prober_log(Logmode)           ! Logmode=1:logging ON
   IF Logmode=1 THEN 
     Logfile$="/var/opt/SPECS/log/prober.log"        ! AVPATH_
     PRINT "GPIB I/O Logging ON: Logfile= "&Logfile$
     EXECUTE "touch "&Logfile$
     EXECUTE "chmod 666 "&Logfile$&" 2> /dev/null"
   END IF
   !
   Status$="OK"
   Error$=""
   SUBEXIT
 Exec_error: !
   Status$="ERROR"
   Error$="#LOGGING"
   SUBEXIT
 SUBEND
 Prober_down:SUB Prober_down(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_DOWN
  !  Vers : 1
  !  Desc : Lowers the wafer chuck (stage) to disconnect from the pro
  !       : be card
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_down(Status$,Error$)
 SUBEND
 Prober_enter:SUB Prober_enter(Ent_val$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_ENTER
  !  Vers : 1
  !  Desc : [UPDATE] Returns GPIB ENTER result
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Ent_val         S    -        GPIB ENTER result
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   IF Prb_address=2500 THEN           ! Address=2500 : OFF-line mode
   ! INPUT "ENTERed strings expected? ",Ent_val$
     Fa_enter(Prb_address,Ent_val$)
     PRINT "ENTER < "&Ent_val$
   ELSE
     ON TIMEOUT Prb_address DIV 100,5 GOTO Timout          ! GPIB timeout
     ENTER Prb_address;Ent_val$
     OFF TIMEOUT 
   END IF
   !
   Prober_logwr("ENTER < "&Ent_val$,Status$,Error$)
   !
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 Timout:OFF TIMEOUT                                           ! I/O timeout
   Status$="ERROR"
   Error$="#TIMEOUT_IO"
   SUBEXIT
 SUBEND
 Prober_flatcomp:SUB Prober_flatcomp(INTEGER Tpl_orifla,Prb_orifla,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_FLATCOMP
  !  Vers : 1
  !  Desc : Gets prober orientation flat angle and save delta from TP
  !       : L
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Tpl_OriFla      I    -        Flat angle defined in TPL
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Prb_OriFla      I    -        Flat angle defined in prober
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_flatcomp(Tpl_orifla,Prb_orifla,Status$,Error$)
 SUBEND
 Prober_getcmap:SUB Prober_getcmap(Cassno$,INTEGER Cassmap(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_GETCMAP
  !  Vers : 1
  !  Desc : [NEW] Get cassette map by using GPIB command "?CS" to the
  !       : prober
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          S    -
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Cassmap         I    50       Cassette map to be set. (0:SKIP,
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_getcmap(Cassno$,Cassmap(*),Status$,Error$)
 SUBEND
 Prober_home:SUB Prober_home(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_HOME
  !  Vers : 1
  !  Desc : Moves the wafer chuck (stage) to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_home(Status$,Error$)
 SUBEND
 Prober_initial:SUB Prober_initial(REAL Diex,Diey,Modx,Mody,Stepx,Stepy,INTEGER Coord,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_INITIAL
  !  Vers : 1
  !  Desc : Defines the initial die/module location
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 DieX            R    -        Initial Die X position from wafe
  !      2 DieY            R    -        Initial Die Y position from wafe
  !      3 ModX            R    -        Initial Module X position from d
  !      4 ModY            R    -        Initial Module Y position from d
  !      5 StepX           R    -        X index size in um
  !      6 StepY           R    -        Y index size in um
  !      7 Coord           I    -        XY Coordinate System (1..4)
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_initial(Diex,Diey,Modx,Mody,Stepx,Stepy,Coord,Status$,Error$)
 SUBEND
 Prober_inker:SUB Prober_inker(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_INKER
  !  Vers : 1
  !  Desc : Drives inker
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_inker(Status$,Error$)
 SUBEND
 Prober_load:SUB Prober_load(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOAD
  !  Vers : 1
  !  Desc : [UPDATE] Unloads the present wafer and loads the next waf
  !       : er from cassette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_load(Status$,Error$)
 SUBEND
 Prober_load_i:SUB Prober_load_i(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOAD_I
  !  Vers : 1
  !  Desc : [UPDATE] Unloads the present wafer and loads the next waf
  !       : er from cassette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_load(Status$,Error$)
 SUBEND
 Prober_load_s:SUB Prober_load_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOAD_S
  !  Vers : 1
  !  Desc : [NEW] Unloads the present wafer and loads the next wafer
  !       : from cassette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_load_s(Status$,Error$)
 SUBEND
 Prober_log:SUB Prober_log(INTEGER Logmode)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOG
  !  Vers : 1
  !  Desc : Defines GPIB I/O log mode
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Logmode         I    -        GPIB I/O Log mode (0:OFF/1:ON)
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Logmode=1           ! 1:Logging ON(default) / 0:Logging OFF
 SUBEND
 Prober_logwr:SUB Prober_logwr(Message$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOGWR
  !  Vers : 1
  !  Desc : Write Message in /var/opt/SPECS/log/prober.log
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Message         S    -
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   REAL Julian,Year,Month,Day,Second
   INTEGER Logmode
   DIM Logtime$[255]
   !
   IF INMEM("Proberlog_time") THEN 
     Proberlog_time(Logtime$)
   ELSE
     Second=TIMEDATE
     Julian=Second DIV 86400-1721119
     Year=(4*Julian-1) DIV 146097
     Julian=(4*Julian-1) MOD 146097
     Day=Julian DIV 4
     Julian=(4*Day+3) DIV 1461
     Day=(4*Day+3) MOD 1461
     Day=(Day+4) DIV 4
     Month=(5*Day-3) DIV 153       ! Month
     Day=(5*Day-3) MOD 153
     Day=(Day+5) DIV 5             ! Day
     Year=100*Year+Julian          ! Year
     IF Month<10 THEN 
       Month=Month+3
     ELSE
       Month=Month-9
       Year=Year+1
     END IF
     OUTPUT Logdate$ USING "#,4Z,A,2Z,A,2Z";Year;"-";Month;"-";Day
     Logtime$=TIME$(Second)
   END IF
   !
   Status$="OK"
   Error$=""
   !
   Prober_log(Logmode)           ! Logmode=1: Logging ON
   IF Logmode=1 THEN 
     ON ERROR GOTO Log_err_assign
     ASSIGN @File TO "/var/opt/SPECS/log/prober.log";APPEND        ! AVPATH_
     ON ERROR GOTO Log_err_output
     OUTPUT @File;Logdate$&" "&Logtime$&" "&Message$&CHR$(10)
 Log_err_output: !
     ASSIGN @File TO *
 Log_err_assign: !
     OFF ERROR 
   END IF
 SUBEND
 Prober_lotend:SUB Prober_lotend(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOTEND
  !  Vers : 1
  !  Desc : [NEW] Finishes lot completely
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_lotend(Status$,Error$)
 SUBEND
 Prober_lotid:SUB Prober_lotid(Lotid$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_LOTID
  !  Vers : 1
  !  Desc : Returns Lot ID currently tested
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Lotid           S    -        Lot ID currently tested
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_lotid(Lotid$,Status$,Error$)
 SUBEND
 Prober_move:SUB Prober_move(REAL Diex,Diey,Modx,Mody,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_MOVE
  !  Vers : 1
  !  Desc : Moves the wafer chuck (stage) to the specified position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 DieX            R    -        Die X position from wafer origin
  !      2 DieY            R    -        Die Y position from wafer origin
  !      3 ModX            R    -        Module X position from die origi
  !      4 ModY            R    -        Module Y position from die origi
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_move(Diex,Diey,Modx,Mody,Status$,Error$)
 SUBEND
 Prober_output:SUB Prober_output(Command$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_OUTPUT
  !  Vers : 1
  !  Desc : [UPDATE] OUTPUTs GPIB command
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Command         S    -        GPIB Command to be OUTPUT
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   IF Prb_address=2500 THEN           ! Prb_address=2500: OFF-line mode
     PRINT "OUTPUT> "&Command$
     Fa_output(Prb_address,Command$)
   ELSE
     ON TIMEOUT Prb_address DIV 100,5 GOTO Timout          ! GPIB timeout
     OUTPUT Prb_address;Command$
     OFF TIMEOUT 
   END IF
   !
   Prober_logwr("OUTPUT> "&Command$,Status$,Error$)
   !
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 Timout:OFF TIMEOUT                                           ! I/O timeout
   Status$="ERROR"
   Error$="#TIMEOUT_IO"
   SUBEXIT
   !
 SUBEND
 Prober_pause:SUB Prober_pause(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_PAUSE
  !  Vers : 1
  !  Desc : Pauses current lot test and turns ON prober light
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_pause(Status$,Error$)
 SUBEND
 Prober_prodid:SUB Prober_prodid(Prodid$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_PRODID
  !  Vers : 1
  !  Desc : Returns product ID currently tested
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Prodid          S    -        ID of product tested
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_prodid(Prodid$,Status$,Error$)
 SUBEND
 Prober_ready:SUB Prober_ready(INTEGER Timeout,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_READY
  !  Vers : 1
  !  Desc : Waits for prober ready SRQ
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Timeout         I    -        Wait time for SRQ
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_ready(Timeout,Status$,Error$)
 SUBEND
 Prober_reject:SUB Prober_reject(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_REJECT
  !  Vers : 1
  !  Desc : [NEW] Rejects wafer to previously defined device
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR" or "END"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_reject(Status$,Error$)
 SUBEND
 Prober_retest:SUB Prober_retest(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_RETEST
  !  Vers : 1
  !  Desc : [NEW] Retest wafers
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_retest(Status$,Error$)
 SUBEND
 Prober_rjlot_i:SUB Prober_rjlot_i(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_RJLOT_I
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_rjlot_i(Status$,Error$)
 SUBEND
 Prober_rjlot_s:SUB Prober_rjlot_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_RJLOT_S
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_rjlot_s(Status$,Error$)
 SUBEND
 Prober_sendcmd:SUB Prober_sendcmd(Command$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SENDCMD
  !  Vers : 1
  !  Desc : [NEW] Call PROBER_OUTPUT or FA_OUTPUT when OFFLINE case.
  !       : Date:  ['01/06/20] Initial revision
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Command         S    -        GPIB Command to be OUTPUT
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Prober_output(Command$,Status$,Error$)
 SUBEND
 Prober_setcmap:SUB Prober_setcmap(Cassno$,INTEGER Slotstat(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SETCMAP
  !  Vers : 1
  !  Desc : [UPDATE] Set cassette map of the current cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          S    -
  !      2 SlotStat        I    50       Cassette map to be set. (0:SKIP,
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_setcmap(Cassno$,Slotstat(*),Status$,Error$)
 SUBEND
 Prober_setup:SUB Prober_setup(Drive$,Filename$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SETUP
  !  Vers : 1
  !  Desc : Specifies product file name
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Drive           S    -        Setup filename
  !      2 Filename        S    -        Setup filename
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_setup(Drive$,Filename$,Status$,Error$)
 SUBEND
 Prober_sload:SUB Prober_sload(INTEGER Cassno,Slotno,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SLOAD
  !  Vers : 1
  !  Desc : [UPDATE] Loads specified wafer from the specified cassett
  !       : e.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          I    -        1 or 2
  !      2 Slotno          I    -        1 to 25
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_sload(Cassno,Slotno,Status$,Error$)
 SUBEND
 Prober_sload_i:SUB Prober_sload_i(INTEGER Cassno,Slotno,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SLOAD_I
  !  Vers : 1
  !  Desc : [UPDATE] Loads specified wafer from the specified cassett
  !       : e.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          I    -        1 or 2
  !      2 Slotno          I    -        1 to 25
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_sload(Cassno,Slotno,Status$,Error$)
 SUBEND
 Prober_sload_s:SUB Prober_sload_s(INTEGER Cassno,Slotno,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SLOAD_S
  !  Vers : 1
  !  Desc : [NEW] Loads specified wafer from the specified cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          I    -        1 or 2
  !      2 Slotno          I    -        1 to 25
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_sload_s(Cassno,Slotno,Status$,Error$)
 SUBEND
 Prober_srq:SUB Prober_srq(INTEGER Timeout,Statusbyte)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_SRQ
  !  Vers : 1
  !  Desc : [UPDATE] Waits until SRQ is asserted
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Timeout         I    -        Timeout in seconds
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Statusbyte      I    -        Status byte
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Reg
   !
   IF Prb_address=2500 THEN           ! Address=2500 : OFF-line mode
     ON ERROR GOTO Input_err
   ! INPUT "Expected Status-byte? (INTEGER) ",Statusbyte
     Fa_spoll(Timeout,Statusbyte)
     PRINT "STB   = "&VAL$(Statusbyte)
     OFF ERROR 
   ELSE
     IF Timeout>0 THEN 
       T1=TIMEDATE
       REPEAT
         STATUS Prb_address DIV 100,7;Reg         ! read status register
         T2=TIMEDATE
         IF (T2-T1)>Timeout THEN GOTO Noresp
       UNTIL BIT(Reg,10)                          ! until SRQ bit is set
     END IF
   !
 Srq:ON TIMEOUT Prb_address DIV 100,5 GOTO Timout               ! GPIB timeout
     Statusbyte=SPOLL(Prb_address)
     OFF TIMEOUT 
   END IF
   !
   Prober_logwr("STB   = "&VAL$(Statusbyte),Status$,Error$)
   !
   SUBEXIT
 Noresp: !
        !OFF DELAY                           ! no response returned
   Statusbyte=-1
   SUBEXIT
 Timout: !
   OFF TIMEOUT                                  ! I/O timeout
   Statusbyte=-2
   SUBEXIT
 Input_err: !
   OFF ERROR 
   Statusbyte=0
   SUBEXIT
 SUBEND
 Prober_tempmon:SUB Prober_tempmon(REAL Montemp,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_TEMPMON
  !  Vers : 1
  !  Desc : Returns hot chuck temperature
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Montemp         R    -        Monitor temperature
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_tempmon(Montemp,Status$,Error$)
 SUBEND
 Prober_tempset:SUB Prober_tempset(REAL Settemp,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_TEMPSET
  !  Vers : 1
  !  Desc : Sets hot chuck temperature
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Settemp         R    -        Set temperature
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_tempset(Settemp,Status$,Error$)
 SUBEND
 Prober_unload:SUB Prober_unload(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_UNLOAD
  !  Vers : 1
  !  Desc : Returns all the wafers to the original slot
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_unload(Status$,Error$)
 SUBEND
 Prober_unload_i:SUB Prober_unload_i(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_UNLOAD_I
  !  Vers : 1
  !  Desc : Returns all the wafers to the original slot
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_unload(Status$,Error$)
 SUBEND
 Prober_unload_s:SUB Prober_unload_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_UNLOAD_S
  !  Vers : 1
  !  Desc : Returns all the wafers to the original slot
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_unload_s(Status$,Error$)
 SUBEND
 Prober_up:SUB Prober_up(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_UP
  !  Vers : 1
  !  Desc : Raises the wafer chuck (stage) to contact the probe card
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_up(Status$,Error$)
 SUBEND
 Prober_wafid:SUB Prober_wafid(Wafid$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : PROBER_WAFID
  !  Vers : 1
  !  Desc : Returns wafer ID on the chuck
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Wafid           S    -        ID of wafer on the chuck
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   Telp12_wafid(Wafid$,Status$,Error$)
 SUBEND
 Telp12_abort:SUB Telp12_abort(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_ABORT
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   ! This function below is available only when
   ! P-12 is set to non-pipeline mode
   ! (Else, command error will occur.)
   !
   Telp12_sload(9,99,Status$,Error$)
 SUBEND
 Telp12_abort_s:SUB Telp12_abort_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_ABORT_S
  !  Vers : 1
  !  Desc : Aborts the current lot test
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   ! This function below is available only when
   ! P-12 is set to non-pipeline mode
   ! (Else, command error will occur.)
   !
   Telp12_sload_s(9,99,Status$,Error$)
 SUBEND
 Telp12_align:SUB Telp12_align(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_ALIGN
  !  Vers : 1
  !  Desc : Aligns wafer and move chuck to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Cassno,Slotno
   !
   Prober_output("S",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Cass_stat$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   ON ERROR GOTO Error
   Slotno=VAL(Cass_stat$[1;2])
   IF Slotno=0 THEN 
     Status$="ERROR"
     Error$="#NOWAFER"
     SUBEXIT
   END IF
   !
   Cassno=0
   IF Cass_stat$[5;1]="2" THEN                    ! "2" for current cassette
     Cassno=1
   END IF
   IF Cass_stat$[6;1]="2" THEN 
     Cassno=2
   END IF
   IF Cassno=0 THEN 
     Status$="ERROR"
     Error$="#NOT_READY"
     SUBEXIT
   END IF
   !
   ! The fllowing function will once unload the current wafer
   ! and re-load the same wafer to align it again.
   ! It may take for as much as 2 minutes.
   ! It's available only when P-12 is set non-pipeline mode.
   !
   Telp12_sload(Cassno,Slotno,Status$,Error$)
         !
   SUBEXIT
 Error: !
   OFF ERROR 
   Status$="ERROR"
   Error$="#INVALID "&Cass_stat$
   SUBEXIT
 SUBEND
 Telp12_align_s:SUB Telp12_align_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_ALIGN_S
  !  Vers : 1
  !  Desc : Aligns wafer and move chuck to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Cassno,Slotno
   !
   Telp12_sload_s(9,99,Status$,Error$)
   !
   SUBEXIT
 Error: !
   OFF ERROR 
   Status$="ERROR"
   Error$="#INVALID "&Cass_stat$
   SUBEXIT
 SUBEND
 Telp12_cassinfo:SUB Telp12_cassinfo(INTEGER Slotno,Cassno,Wafcount,Casscount,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_CASSINFO
  !  Vers : 1
  !  Desc : Returns cassette information
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Slotno          I    -        Wafer slot position
  !      2 Cassno          I    -        Cassette number of wafer origine
  !      3 Wafcount        I    -        Remaining number of wafers in cu
  !      4 Casscount       I    -        Remaining number of cassettes
  !      5 Status          S    -        "OK" or "ERROR"
  !      6 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Stat$[100]
   Slotno=0
   Cassno=0
   Wafcount=0
   Casscount=0
   !
   Prober_output("S",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prober_enter(Stat$,Status$,Error$)              ! SSWWCCCC
   IF Status$<>"OK" THEN SUBEXIT
   !
   ON ERROR GOTO Val_err
   IF Stat$[3;2]="FF" THEN                         ! Not yet mapped
     Status$="ERROR"
     Error$="#NOT_READY"
     SUBEXIT
   ELSE
     IF Stat$[5;1]="0" AND Stat$[6;1]="0" THEN 
       Status$="OK"
       Error$="#NO_CASSETTE"
       SUBEXIT
     END IF
     Slotno=VAL(Stat$[1;2])
     Wafcount=VAL(Stat$[3;2])
     FOR I=5 TO 6
       IF Stat$[I;1]="1" THEN Casscount=Casscount+1
       IF Stat$[I;1]="2" THEN Cassno=I-4
     NEXT I
     Status$="OK"
     Error$="#READY"
     SUBEXIT
   END IF
   OFF ERROR 
   !
 Val_err:OFF ERROR 
   Status$="ERROR"
   Error$="#INVALID "&Stat$
   SUBEXIT
 SUBEND
 Telp12_cassmap:SUB Telp12_cassmap(INTEGER Cassmap(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_CASSMAP
  !  Vers : 1
  !  Desc : Returns cassette map
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Cassmap         I    50       Cassette map
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Stat$[100]
   !
   FOR I=1 TO 50
     Cassmap(I)=0
   NEXT I
   !
   Prober_output("d",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Stat$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   ON ERROR GOTO Invalid
   FOR I=1 TO 25
     IF Stat$[I+1;1]="a" THEN               ! "a"=0110001
       Cassmap(I)=1
     ELSE
       Cassmap(I)=0
     END IF
   NEXT I
   FOR I=26 TO 50
     IF Stat$[I+2;1]="a" THEN 
       Cassmap(I)=1
     ELSE
       Cassmap(I)=0
     END IF
   NEXT I
   OFF ERROR 
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 Invalid: !
   OFF ERROR 
   Status$="ERROR"
   Error$="#INVALID "&Stat$
 SUBEND
 Telp12_chkmove:SUB Telp12_chkmove(REAL Xdist,Ydist,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_CHKMOVE
  !  Vers : 1
  !  Desc : Moves the chuck by X/Ydist[um] relatively
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Xdist           R    -        X(R-L) Movement distance in [um]
  !      2 Ydist           R    -        Y(F-B) Movement distance in [um]
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Move_cmd$[100]
   !
   Status$="OK"
   Error$="#XY_MOVE"
   !
   IF (ABS(Xdist)>99999) THEN 
     Status$="ERROR"
     Error$="#XMTRAVEL"
     SUBEXIT
   END IF
   IF (ABS(Ydist)>99999) THEN 
     Status$="ERROR"
     Error$="#YMTRAVEL"
     SUBEXIT
   END IF
   !
   ! Micro movement X/Ydist
   !
   Prober_down(Stat$,Err$)
   IF Stat$<>"OK" THEN 
     Status$=Stat$
     Error$=Err$
     SUBEXIT
   END IF
   IF ABS(Xdist)>=1 THEN 
     OUTPUT Move_cmd$ USING "#,A,S5Z,2Z";"I",SGN(Xdist)*(INT(ABS(Xdist))),1
     Prober_output(Move_cmd$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Prober_srq(10,Stb)              ! SPOLL for X movement
     GOSUB Srq_ij
     IF Status$<>"OK" THEN SUBEXIT
   END IF
   !
   IF ABS(Ydist)>=1 THEN 
     OUTPUT Move_cmd$ USING "#,A,S5Z,2Z";"J",-1*SGN(Ydist)*(INT(ABS(Ydist))),1
     Prober_output(Move_cmd$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Prober_srq(10,Stb)              ! SPOLL for Y movement
     GOSUB Srq_ij
     IF Status$<>"OK" THEN SUBEXIT
   END IF
   SUBEXIT
   !
 Srq_ij:  !
   SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 65,66
     Status$="OK"
     Error$="#XY_MOVE"
   CASE 75
     Status$="OK"
     Error$="#WAF_END"
     SUBEXIT        ! because no other SRQ will follow it
   CASE 79                                         ! Beyond probe area (0x4f)
     Status$="OK"                                ! Temporary solution
     Error$="#XY_MOVE"                           ! for out of probe area
   ! Status$="ERROR"
   ! Error$="#PROBEAREA"
   ! When micro-moving more than half of the die pitch,
   ! P12 recognize the probing point moves out of the currnet die
   ! to the next die, which causes "out of probe area" STB
   ! when probing the die close to the edge of the wafer.
   ! To continue testing, ignore this STB, until the S/W of
   ! P12 is improved to recognize the die area correctly.
   CASE 80                                         ! prober error
     Prober_srq(5,Stb)         ! for SRQ clear if any
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_clean:SUB Telp12_clean(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_CLEAN
  !  Vers : 1
  !  Desc : Executes probe cleaning with cleaning plate
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Stb
   !
   Prober_output("p",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(100,Stb)
   GOSUB Srq_p
   IF Status$<>"OK" THEN SUBEXIT
   SUBEXIT
   !
 Srq_p:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 89                                         ! p complete(0x59)
     Status$="OK"
     Error$=""
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_cmapodr:SUB Telp12_cmapodr(Cassno$,INTEGER Slotstat(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_CMAPODR
  !  Vers : 1
  !  Desc : [UPDATE] Set cassette map of the current cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          S    -
  !      2 Slotstat        I    50       Cassette map to be set. (0:SKIP,
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Stat$[100]
   !
   Stat$="RL,"&Cassno$&","
   !
   FOR I=1 TO 25
     IF (Slotstat(I)>=1 AND Slotstat(I)<=9) THEN 
       Stat$=Stat$&"0"&VAL$(Slotstat(I))
     ELSE
       IF (Slotstat(I)>=10 AND Slotstat(I)<=25) THEN 
         Stat$=Stat$&VAL$(Slotstat(I))
       ELSE
         Stat$=Stat$&"  "
       END IF
     END IF
   NEXT I
   !
   Prober_output(Stat$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(300,Stb)                             ! Timeout 300 sec
   GOSUB Srq_rl
   !
   SUBEXIT
   !
 Srq_rl:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 80
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 89                                         ! Ack for cassette set (0x59)
     Status$="OK"
     Error$=""
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_down:SUB Telp12_down(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_DOWN
  !  Vers : 1
  !  Desc : Lowers the wafer chuck (stage) to disconnect from the pro
  !       : be card
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Stb
   !
   Prober_output("D",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prober_srq(5,Stb)
   GOSUB Srq_d
   IF Status$<>"OK" THEN SUBEXIT
   SUBEXIT
   !
 Srq_d:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 68                                         ! D complete (0x44)
     Status$="OK"
     Error$=""
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_flatcomp:SUB Telp12_flatcomp(INTEGER Tpl_orifla,Prb_orifla,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_FLATCOMP
  !  Vers : 1
  !  Desc : Gets prober orientation flat angle and save delta from TP
  !       : L
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Tpl_OriFla      I    -        Flat angle defined in TPL
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Prb_OriFla      I    -        Flat angle defined in prober
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   DIM P_para$[255]
   Prb_orifla=-1       ! for error return
   !
   Prober_output("G",Status$,Error$)           ! Product parameter
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(P_para$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   SELECT P_para$[22;1]
   CASE "0"
     Prb_orifla=0
   CASE "3"
     Prb_orifla=90
   CASE "5"
     Prb_orifla=180
   CASE "7"
     Prb_orifla=270
   CASE ELSE
     Status$="ERROR"
     Error$="#PRB_FLAT"
     SUBEXIT
   END SELECT
   !
   IF Tpl_orifla=-1 THEN 
     SUBEXIT
   END IF
   SELECT Tpl_orifla
   CASE 0,360,-360
     Tpl_orifla=0
   CASE 90,-270
     Tpl_orifla=90
   CASE 180,-180
     Tpl_orifla=180
   CASE 270,-90
     Tpl_orifla=270
   CASE ELSE
     Status$="ERROR"
     Error$="#TPL_FLAT"
   END SELECT
   !
   Prb_flat=Prb_orifla-Tpl_orifla
   !
   Status$="OK"
   Error$=""
   SUBEXIT
 SUBEND
 Telp12_getcmap:SUB Telp12_getcmap(Cassno$,INTEGER Cassmap(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_GETCMAP
  !  Vers : 1
  !  Desc : [NEW] Get cassette map by using GPIB command "?CS" to the
  !       :  prober
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          S    -
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Cassmap         I    50       Cassette map to be set. (0:SKIP,
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Stat$[100]
   DIM Cmd$[32]
   !
   Cmd$="?CS,"&Cassno$
   Prober_output(Cmd$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Stat$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   ON ERROR GOTO Invalid
   FOR I=1 TO 25
     IF Stat$[I;1]="0" THEN                 ! "a"=0110001
       Cassmap(I)=0
     ELSE
       Cassmap(I)=1
     END IF
   NEXT I
   OFF ERROR 
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 Invalid: !
   OFF ERROR 
   Status$="ERROR"
   Error$="#INVALID "&Stat$
   !
   RETURN 
   !
 SUBEND
 Telp12_home:SUB Telp12_home(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_HOME
  !  Vers : 1
  !  Desc : Moves the wafer chuck (stage) to the initial position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   ! PRINT "Moving back to initial position... (Relative movement)"
   ! Telp12_move(Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my,Status$,Error$)
   ! SUBEXIT
   !
   Prober_output("B",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(10,Stb)
   GOSUB Srq_b
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prb_curr_dx=Prb_init_dx
   Prb_curr_dy=Prb_init_dy
   Prb_curr_mx=Prb_init_mx
   Prb_curr_my=Prb_init_my
   Prb_curr_x=Prb_init_dx+Prb_init_mx
   Prb_curr_y=Prb_init_dy+Prb_init_my
   SUBEXIT
   !
 Srq_b:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 70                                         ! B complete (0x44)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 75
     Status$="OK"
     Error$="#WAF_END"
   CASE 89
     Prober_srq(10,Stb)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 Timout:OFF TIMEOUT 
   Status$="ERROR"
   Error$="#TIMEOUT_IO"
   SUBEXIT
   !
 SUBEND
 Telp12_initial:SUB Telp12_initial(REAL Diex,Diey,Modx,Mody,Stepx,Stepy,INTEGER Coord,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_INITIAL
  !  Vers : 1
  !  Desc : Defines the initial die/module location
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 DieX            R    -        Initial Die X position from wafe
  !      2 DieY            R    -        Initial Die Y position from wafe
  !      3 ModX            R    -        Initial Module X position from d
  !      4 ModY            R    -        Initial Module Y position from d
  !      5 StepX           R    -        X index size in um
  !      6 StepY           R    -        Y index size in um
  !      7 Coord           I    -        XY Coordinate System (1..4)
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   DIM P_para$[255]
   !
   Status$="OK"
   Error$=""
   !
   Prb_init_dx=Diex
   Prb_init_dy=Diey
   Prb_init_mx=Modx
   Prb_init_my=Mody
   !
   Prb_curr_dx=Diex
   Prb_curr_dy=Diey
   Prb_curr_mx=Modx
   Prb_curr_my=Mody
   !
   Prb_curr_x=Diex+Modx
   Prb_curr_y=Diey+Mody
   !
   Prober_output("G",Status$,Err$)     ! Product parameter
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(P_para$,Status$,Err$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   ON ERROR GOTO Val_err
   IF Stepx=0 THEN 
     IF Prb_flat=0 OR Prb_flat=180 OR Prb_flat=-180 THEN 
       Prb_stepx=VAL(P_para$[23;5])
     ELSE
       Prb_stepx=VAL(P_para$[28;5])
     END IF
   ELSE
     Prb_stepx=Stepx
     IF Prb_flat=0 OR Prb_flat=180 OR Prb_flat=-180 THEN 
       IF Prb_stepx<>VAL(P_para$[23;5]) THEN 
         Status$="ERROR"
         Error$="#STEPX"
         SUBEXIT
       END IF
     ELSE
       IF Prb_stepx<>VAL(P_para$[28;5]) THEN 
         Status$="ERROR"
         Error$="#STEPX"
         SUBEXIT
       END IF
     END IF
   END IF
   !
   IF Stepy=0 THEN 
     IF Prb_flat=0 OR Prb_flat=180 OR Prb_flat=-180 THEN 
       Prb_stepy=VAL(P_para$[28;5])
     ELSE
       Prb_stepy=VAL(P_para$[23;5])
     END IF
   ELSE
     Prb_stepy=Stepy
     IF Prb_flat=0 OR Prb_flat=180 OR Prb_flat=-180 THEN 
       IF Prb_stepy<>VAL(P_para$[28;5]) THEN 
         Status$="ERROR"
         Error$="#STEPY"
         SUBEXIT
       END IF
     ELSE
       IF Prb_stepy<>VAL(P_para$[23;5]) THEN 
         Status$="ERROR"
         Error$="#STEPY"
         SUBEXIT
       END IF
     END IF
   END IF
   !
   IF Coord=1 OR Coord=2 OR Coord=3 OR Coord=4 THEN 
     Prb_coord=Coord
   ELSE
     Status$="ERROR"
     Error$="#COORD"
     SUBEXIT
   END IF
   !
   OFF TIMEOUT 
   OFF ERROR 
   Status$="OK"
   Error$=""
   SUBEXIT
 Val_err: !
   OFF ERROR 
   Status$="ERROR"
   Error$="#INVALID "&P_para$
   SUBEXIT
 SUBEND
 Telp12_inker:SUB Telp12_inker(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_INKER
  !  Vers : 1
  !  Desc : Drives inker
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   ! ON TIMEOUT Prb_address DIV 100,5 GOTO Timout
   ! OUTPUT Prb_address;"R"                          ! Marking
   !                                            ! No SRQ is asserted
   ! Status$="OK"
   ! Error$=""
   !
   Prober_output("R",Status$,Error$)
   SUBEXIT
   !
 Timout:OFF TIMEOUT 
   Status$="ERROR"
   Error$="#TIMEOUT_IO"
   SUBEXIT
 SUBEND
 Telp12_load:SUB Telp12_load(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_LOAD
  !  Vers : 1
  !  Desc : [NEW] Unloads the present wafer and loads the next wafer
  !       : from cassette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   Prober_output("U",Status$,Error$)
   IF Status$<>"OK" THEN 
     Status$="ERROR"
     Error$="#TIMEOUT_IO"
     SUBEXIT
   END IF
   !
   Status$="OK"
   Error$="#TIMEOUT_SRQ"
   SUBEXIT
   !
 SUBEND
 Telp12_load_s:SUB Telp12_load_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_LOAD_S
  !  Vers : 1
  !  Desc : [NEW] Unloads the present wafer and loads the next wafer
  !       : from cassette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   Prober_srq(5,Stb)                               ! Timeout 5   sec
   GOSUB Srq_u
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prb_curr_dx=Prb_init_dx
   Prb_curr_dy=Prb_init_dy
   Prb_curr_mx=Prb_init_mx
   Prb_curr_my=Prb_init_my
   Prb_curr_x=Prb_init_dx+Prb_init_mx
   Prb_curr_y=Prb_init_dy+Prb_init_my
   SUBEXIT
   !
 Srq_u:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 70                                         ! Initial chip (0x46)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 72                                         ! Lot end (0x48)
     Status$="END"
     Error$=""
   CASE 74                                         ! Initial wafer (0x4a)
     Prober_srq(10,Stb)                          ! wait for next SRQ
     SELECT Stb
     CASE -1
       Status$="ERROR"
       Error$="#TIMEOUT_SRQ"
     CASE -2
       Status$="ERROR"
       Error$="#TIMEOUT_SPOLL"
     CASE 70                                     ! initial chip (0x46)
       Status$="OK"
       Error$="#INIT_WAFER"
     CASE 80                                       ! prober error
       Prober_output("s",Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
       Prober_enter(Emsg$,Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
   !
       Status$="ERROR"
       Error$="#ERROR "&Emsg$
     CASE ELSE
       Status$="ERROR"
       Error$="#SRQ "&VAL$(Stb)
     END SELECT
   CASE 76                                    ! alignment fail
     Status$="ERROR"
     Error$="#ALIGN_REJECT"
   CASE 78                                    ! alignment fail
     Status$="ERROR"
     Error$="#ALIGN_ASSIST"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 96                             ! Unload complete(waiting for next "l")
     Status$="OK"
     Error$="#SLOAD_READY"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_lotend:SUB Telp12_lotend(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_LOTEND
  !  Vers : 1
  !  Desc : [NEW] Finishes lot completely
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   Prober_output("UD007",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(300,Stb)                             ! Timeout 300 sec
   GOSUB Srq_ud
   !
   SUBEXIT
   !
 Srq_ud:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 89                                         ! Ready for lot end (0x59)
     Status$="OK"
     Error$="#LOT_END"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_lotid:SUB Telp12_lotid(Lotid$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_LOTID
  !  Vers : 1
  !  Desc : Returns Lot ID currently tested
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Lotid           S    -        Lot ID currently tested
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   DIM Lot_id$[30]
   Lot_id$=""
   Lotid$=""
   !
   Prober_output("g",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Lot_id$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Lotid$=Lot_id$[4;20]
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 SUBEND
 Telp12_move:SUB Telp12_move(REAL Diex,Diey,Modx,Mody,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_MOVE
  !  Vers : 1
  !  Desc : Moves the wafer chuck (stage) to the specified position
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 DieX            R    -        Die X position from wafer origin
  !      2 DieY            R    -        Die Y position from wafer origin
  !      3 ModX            R    -        Module X position from die origi
  !      4 ModY            R    -        Module Y position from die origi
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Move_cmd$[100]
   !
   Status$="OK"
   Error$="#XY_MOVE"
   !
   ! X/Ydist calculation for index movement
   !
   IF Prb_stepx=0 THEN 
     Status$="ERROR"
     Error$="#STEPX"
     SUBEXIT
   END IF
   IF Prb_stepy=0 THEN 
     Status$="ERROR"
     Error$="#STEPY"
     SUBEXIT
   END IF
   !
   Xdist=Diex-Prb_curr_dx
   Ydist=Diey-Prb_curr_dy
   IF (ABS(Xdist/Prb_stepx)>99) THEN 
     Status$="ERROR"
     Error$="#XDTRAVEL"
     SUBEXIT
   END IF
   IF (ABS(Ydist/Prb_stepy)>99) THEN 
     Status$="ERROR"
     Error$="#YDTRAVEL"
     SUBEXIT
   END IF
   !
   ! Flat/Coordinate compensation
   !
   SELECT Prb_coord
   CASE 1
     SELECT Prb_flat
     CASE 0
       Ximove=Xdist
       Yimove=Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 90,-270
       Ximove=Ydist
       Yimove=-Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE 180,-180
       Ximove=-Xdist
       Yimove=-Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 270,-90
       Ximove=-Ydist
       Yimove=Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE 2
     SELECT Prb_flat
     CASE 0
       Ximove=-Xdist
       Yimove=Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 90,-270
       Ximove=Ydist
       Yimove=Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE 180,-180
       Ximove=Xdist
       Yimove=-Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 270,-90
       Ximove=-Ydist
       Yimove=-Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE 3
     SELECT Prb_flat
     CASE 0
       Ximove=-Xdist
       Yimove=-Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 90,-270
       Ximove=-Ydist
       Yimove=Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE 180,-180
       Ximove=Xdist
       Yimove=Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 270,-90
       Ximove=Ydist
       Yimove=-Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE 4
     SELECT Prb_flat
     CASE 0
       Ximove=Xdist
       Yimove=-Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 90,-270
       Ximove=-Ydist
       Yimove=-Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE 180,-180
       Ximove=-Xdist
       Yimove=Ydist
       Xstep=Prb_stepx
       Ystep=Prb_stepy
     CASE 270,-90
       Ximove=Ydist
       Yimove=Xdist
       Xstep=Prb_stepy
       Ystep=Prb_stepx
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE ELSE
     Status$="ERROR"
     Error$="#COORD"
     SUBEXIT
   END SELECT
   !
   ! Index movement X/Ydist
   !
   IF Xdist<>0 OR Ydist<>0 THEN 
     OUTPUT Move_cmd$ USING "#,A,S2Z,A,S2Z";"X",SGN(Ximove)*(INT(ABS(Ximove/Xstep))),"Y",-1*SGN(Yimove)*(INT(ABS(Yimove/Ystep)))
     Prober_output(Move_cmd$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Prober_srq(10,Stb)              ! SPOLL for X movement
     GOSUB Srq_xy
     IF Status$<>"OK" THEN SUBEXIT
   !
     Prober_srq(10,Stb)              ! SPOLL for Y movement
     GOSUB Srq_xy
     IF Status$<>"OK" THEN SUBEXIT
   END IF
   !
   Prb_curr_dx=Diex                              ! update current position
   Prb_curr_dy=Diey
   !
   Xdist=Modx-Prb_curr_mx
   Ydist=Mody-Prb_curr_my
   IF (ABS(Xdist)>99999) THEN 
     Status$="ERROR"
     Error$="#XMTRAVEL"
     SUBEXIT
   END IF
   IF (ABS(Ydist)>99999) THEN 
     Status$="ERROR"
     Error$="#YMTRAVEL"
     SUBEXIT
   END IF
   !
   ! Flat/Coordinate compensation
   !
   SELECT Prb_coord
   CASE 1
     SELECT Prb_flat
     CASE 0
       Xumove=Xdist
       Yumove=Ydist
     CASE 90,-270
       Xumove=Ydist
       Yumove=-Xdist
     CASE 180,-180
       Xumove=-Xdist
       Yumove=-Ydist
     CASE 270,-90
       Xumove=-Ydist
       Yumove=Xdist
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE 2
     SELECT Prb_flat
     CASE 0
       Xumove=-Xdist
       Yumove=Ydist
     CASE 90,-270
       Xumove=Ydist
       Yumove=Xdist
     CASE 180,-180
       Xumove=Xdist
       Yumove=-Ydist
     CASE 270,-90
       Xumove=-Ydist
       Yumove=-Xdist
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE 3
     SELECT Prb_flat
     CASE 0
       Xumove=-Xdist
       Yumove=-Ydist
     CASE 90,-270
       Xumove=-Ydist
       Yumove=Xdist
     CASE 180,-180
       Xumove=Xdist
       Yumove=Ydist
     CASE 270,-90
       Xumove=Ydist
       Yumove=-Xdist
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE 4
     SELECT Prb_flat
     CASE 0
       Xumove=Xdist
       Yumove=-Ydist
     CASE 90,-270
       Xumove=-Ydist
       Yumove=-Xdist
     CASE 180,-180
       Xumove=-Xdist
       Yumove=Ydist
     CASE 270,-90
       Xumove=Ydist
       Yumove=Xdist
     CASE ELSE
       Status$="ERROR"
       Error$="#FLAT"
       SUBEXIT
     END SELECT
   CASE ELSE
     Status$="ERROR"
     Error$="#COORD"
     SUBEXIT
   END SELECT
   !
   ! Micro movement X/Ydist
   !
   IF ABS(Xumove)>=1 THEN 
     OUTPUT Move_cmd$ USING "#,A,S5Z,2Z";"I",SGN(Xumove)*(INT(ABS(Xumove))),1
     Prober_output(Move_cmd$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Prober_srq(10,Stb)              ! SPOLL for X movement
     GOSUB Srq_ij
     IF Status$<>"OK" THEN SUBEXIT
   !
   END IF
   !
   IF ABS(Yumove)>=1 THEN 
     OUTPUT Move_cmd$ USING "#,A,S5Z,2Z";"J",-1*SGN(Yumove)*(INT(ABS(Yumove))),1
     Prober_output(Move_cmd$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Prober_srq(10,Stb)              ! SPOLL for Y movement
     GOSUB Srq_ij
     IF Status$<>"OK" THEN SUBEXIT
   !
   END IF
   OUTPUT S$ USING "S6Z";SGN(Xdist)*INT(ABS(Xdist))
   Out_x=VAL(S$)
   Prb_curr_mx=Prb_curr_mx+(Out_x*1.0)
   OUTPUT S$ USING "S6Z";SGN(Ydist)*INT(ABS(Ydist))
   Out_y=VAL(S$)
   Prb_curr_my=Prb_curr_my+(Out_y*1.0)
   !
   Prb_curr_x=Prb_curr_dx+Prb_curr_mx
   Prb_curr_y=Prb_curr_dy+Prb_curr_my
   !
   Telp12_up(Stat$,Err$)
   IF Stat$<>"OK" THEN 
     Status$=Stat$
     Error$=Err$
     SUBEXIT
   END IF
   !
   SUBEXIT
   !
 Srq_xy:  !
   SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 65,66
     Status$="OK"
     Error$="#XY_MOVE"
   CASE 75
     Status$="OK"
     Error$="#WAF_END"
     SUBEXIT        ! because no other SRQ will follow it
   CASE 79                                         ! Beyond probe area (0x4f)
     Status$="OK"                            ! Temporary solution
     Error$="#XY_MOVE"                       ! for out of probe area.
   !
   ! Status$="ERROR"                  ! Those 2 lines should be
   ! Error$="#PROBEAREA"              ! used instead when available
   ! When micro-moving more than half of the die pitch,
   ! P12 recognize the probing point moves out of the currnet die
   ! to the next die, which causes "out of probe area" STB
   ! when probing the die close to the edge of the wafer.
   ! To continue testing, ignore this STB, until the S/W of
   ! P12 is improved to recognize the die area correctly.
   CASE 80                                         ! prober error
     Prober_srq(5,Stb)         ! for SRQ clear if any
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 Srq_ij:  !
   SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 65,66
     Status$="OK"
     Error$="#XY_MOVE"
   CASE 75
     Status$="OK"
     Error$="#WAF_END"
     SUBEXIT        ! because no other SRQ will follow it
   CASE 79                                         ! Beyond probe area (0x4f)
     Status$="OK"                                ! Temporary solution
     Error$="#XY_MOVE"                           ! for out of probe area
   ! Status$="ERROR"
   ! Error$="#PROBEAREA"
   ! When micro-moving more than half of the die pitch,
   ! P12 recognize the probing point moves out of the currnet die
   ! to the next die, which causes "out of probe area" STB
   ! when probing the die close to the edge of the wafer.
   ! To continue testing, ignore this STB, until the S/W of
   ! P12 is improved to recognize the die area correctly.
   CASE 80                                         ! prober error
     Prober_srq(5,Stb)         ! for SRQ clear if any
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_pause:SUB Telp12_pause(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_PAUSE
  !  Vers : 1
  !  Desc : Pauses current lot test and turns ON prober light
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Stb
   !
   Prober_output("e",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 SUBEND
 Telp12_prodid:SUB Telp12_prodid(Prodid$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_PRODID
  !  Vers : 1
  !  Desc : Returns product ID currently tested
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Prodid          S    -        Product ID tested
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Prod_id$[256]
   Prodid$=""
   Prod_id$=""
   !
   Prober_output("G",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Prod_id$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prodid$=Prod_id$[1;20]
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 SUBEND
 Telp12_ready:SUB Telp12_ready(INTEGER Timeout,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_READY
  !  Vers : 1
  !  Desc : Waits for prober ready SRQ
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Timeout         I    -        Wait time for SRQ
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   IF Timeout>=0 THEN 
     Prober_srq(Timeout,Stb)                           ! Timeout 300 sec
     GOSUB Srq
     IF Status$<>"OK" THEN SUBEXIT
   ELSE
     Status$="ERROR"
     Error$="#TIMEOUT "&VAL$(Timeout)
     SUBEXIT
   END IF
   SUBEXIT
   !
 Srq:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 65,79                              ! X move complete or out-of-area
     Status$="OK"
     Error$="#XY_MOVE"
     Prober_srq(5,Stb)                   ! to clear the 2nd SRQ
   CASE 66                                 ! Y move complete
     Status$="OK"
     Error$="#XY_MOVE"
   CASE 67,73
     Status$="OK"
     Error$=""
   CASE 70                                         ! Initial chip (0x46)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 72                                         ! Lot end (0x48)
     Status$="END"
     Error$=""
   CASE 74                                         ! Initial wafer (0x4a)
     Prober_srq(100,Stb)                         ! wait for next SRQ
     SELECT Stb
     CASE -1
       Status$="ERROR"
       Error$="#TIMEOUT_SRQ"
     CASE -2
       Status$="ERROR"
       Error$="#TIMEOUT_SPOLL"
     CASE 70                                     ! initial chip (0x46)
       Status$="OK"
       Error$="#INIT_WAFER"
     CASE 80                                       ! prober error
       Prober_output("s",Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
       Prober_enter(Emsg$,Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
   !
       Status$="ERROR"
       Error$="#ERROR "&Emsg$
     CASE ELSE
       Status$="ERROR"
       Error$="#SRQ "&VAL$(Stb)
     END SELECT
   CASE 75                                         ! Wafer End (0x4b)
     Status$="OK"
     Error$="#WAF_END"
   CASE 76                                         ! Align Error (0x4c)
     Status$="ERROR"
     Error$="#ALIGN_REJECT"
   CASE 78                                         ! Align Error (0x4e)
     Status$="ERROR"
     Error$="#ALIGN_ASSIST"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 82                           ! Ready to accept product file name
     Status$="OK"
     Error$="#SETUP_READY"
   CASE 89                                         ! Continue (0x59)
     Status$="OK"
     Error$="#CONTINUE"
   CASE 96                           ! Unload complete(waiting for next "l")
     Status$="OK"
     Error$="#SLOAD_READY"
   CASE 112                          ! Cass.mapping done (if this SRQ enabled)
     Status$="OK"
     Error$="#CASSMAP_READY"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_reject:SUB Telp12_reject(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_REJECT
  !  Vers : 1
  !  Desc : [NEW] Rejects wafer to previously defined device
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR" or "END"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   Prober_output("u",Status$,Error$)
   Prober_srq(300,Stb)                             ! Timeout 300 sec
   IF Status$<>"OK" THEN SUBEXIT
   GOSUB Srq_u
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prb_curr_dx=Prb_init_dx
   Prb_curr_dy=Prb_init_dy
   Prb_curr_mx=Prb_init_mx
   Prb_curr_my=Prb_init_my
   Prb_curr_x=Prb_init_dx+Prb_init_mx
   Prb_curr_y=Prb_init_dy+Prb_init_my
   SUBEXIT
   !
 Srq_u:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 70                                         ! Initial chip (0x46)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 72                                         ! Lot end (0x48)
     Status$="END"
     Error$=""
   CASE 74                                         ! Initial wafer (0x4a)
     Prober_srq(300,Stb)                         ! wait for next SRQ
     SELECT Stb
     CASE -1
       Status$="ERROR"
       Error$="#TIMEOUT_SRQ"
     CASE -2
       Status$="ERROR"
       Error$="#TIMEOUT_SPOLL"
     CASE 70                                     ! initial chip (0x46)
       Status$="OK"
       Error$="#INIT_WAFER"
     CASE 80                                       ! prober error
       Prober_output("s",Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
       Prober_enter(Emsg$,Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
            !
       Status$="ERROR"
       Error$="#ERROR "&Emsg$
     CASE ELSE
       Status$="ERROR"
       Error$="#SRQ "&VAL$(Stb)
     END SELECT
   CASE 76                          ! Alignment fail
     Status$="ERROR"
     Error$="#ALIGN_REJECT"
   CASE 78                          ! Alignment fail
     Status$="ERROR"
     Error$="#ALIGN_ASSIST"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 96                             ! Unload complete(waiting for next "l")
     Status$="OK"
     Error$="#SLOAD_READY"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_retest:SUB Telp12_retest(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_RETEST
  !  Vers : 1
  !  Desc : [NEW] Retest wafers
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   Prober_output("RETEST",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(300,Stb)                             ! Timeout 300 sec
   GOSUB Srq_ud
   !
   SUBEXIT
   !
 Srq_ud:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 80
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 89                                         ! Ready for retest (0x59)
     Status$="OK"
     Error$="RETEST"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_rjlot_i:SUB Telp12_rjlot_i(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_RJLOT_I
  !  Vers : 1
  !  Desc : Unloads the present wafer and loads the next wafer from c
  !       : assette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   Prober_output("VF",Status$,Error$)
   IF Status$<>"OK" THEN 
     Status$="ERROR"
     Error$="#TIMEOUT_IO"
     SUBEXIT
   END IF
   !
   Status$="OK"
   Error$="#TIMEOUT_SRQ"
   SUBEXIT
   !
 SUBEND
 Telp12_rjlot_s:SUB Telp12_rjlot_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_RJLOT_S
  !  Vers : 1
  !  Desc : Unloads the present wafer and loads the next wafer from c
  !       : assette
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   !
   Prober_srq(5,Stb)                               ! Timeout 5   sec
   GOSUB Srq_vf
   IF Status$<>"OK" THEN SUBEXIT
   !
   SUBEXIT
   !
 Srq_vf:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 70                                         ! Initial chip (0x46)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 72                                         ! Lot end (0x48)
     Status$="END"
     Error$=""
   CASE 74                                         ! Initial wafer (0x4a)
     Prober_srq(10,Stb)                          ! wait for next SRQ
     SELECT Stb
     CASE -1
       Status$="ERROR"
       Error$="#TIMEOUT_SRQ"
     CASE -2
       Status$="ERROR"
       Error$="#TIMEOUT_SPOLL"
     CASE 70                                     ! initial chip (0x46)
       Status$="OK"
       Error$="#INIT_WAFER"
     CASE 80                                       ! prober error
       Prober_output("s",Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
       Prober_enter(Emsg$,Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
   !
       Status$="ERROR"
       Error$="#ERROR "&Emsg$
     CASE ELSE
       Status$="ERROR"
       Error$="#SRQ "&VAL$(Stb)
     END SELECT
   CASE 76                                    ! alignment fail
     Status$="ERROR"
     Error$="#ALIGN_REJECT"
   CASE 78                                    ! alignment fail
     Status$="ERROR"
     Error$="#ALIGN_ASSIST"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 96                             ! Unload complete(waiting for next "l")
     Status$="OK"
     Error$="#SLOAD_READY"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_setcmap:SUB Telp12_setcmap(Cassno$,INTEGER Slotstat(*),Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_SETCMAP
  !  Vers : 1
  !  Desc : [UPDATE] Set cassette map of the current cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          S    -
  !      2 SlotStat        I    50       Cassette map to be set. (0:SKIP,
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Stat$[100]
   !
   Stat$="CS,"&Cassno$&","
   !
   FOR I=1 TO 25
     IF Slotstat(I)=1 THEN 
       Stat$=Stat$&"0"
     ELSE
       Stat$=Stat$&"1"
     END IF
   NEXT I
   !
   Prober_output(Stat$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(300,Stb)                             ! Timeout 300 sec
   GOSUB Srq_cs
   !
   SUBEXIT
   !
 Srq_cs:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 80
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 89                                         ! Ack for cassette set (0x59)
     Status$="OK"
     Error$=""
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_setup:SUB Telp12_setup(Drive$,Filename$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_SETUP
  !  Vers : 1
  !  Desc : Specifies product file name
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Drive           S    -        Setup filename
  !      2 Filename        S    -        Setup filename
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Setfile$[20],Cmd$[30]
   !
   Setfile$=Filename$[1;20]            ! First 20 char to set
   !
   OUTPUT Cmd$ USING "#,A,20A";"N",Setfile$
   Prober_output(Cmd$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prober_srq(60,Stb)
   GOSUB Srq_n
   IF Status$<>"OK" THEN SUBEXIT
   SUBEXIT
   !
 Srq_n:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 89                                         ! N complete (0x59)
     Status$="OK"
     Error$=""
   CASE 78                                         ! File not found (0x4e)
     Status$="ERROR"
     Error$="#NOFILE"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_sload:SUB Telp12_sload(INTEGER Cassno,Slotno,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_SLOAD
  !  Vers : 1
  !  Desc : [NEW] Loads specified wafer from the specified cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          I    -        1 or 2
  !      2 Slotno          I    -        1 to 25
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb,Slot,Waf,Cass,Casscount
   !
   SELECT Cassno
   CASE 0                      ! Cassno=0 or Slotno=0 for unload only
     Telp12_cassinfo(Slot,Cass,Waf,Casscount,Status$,Error$)
     IF Slot<>0 THEN 
       Telp12_load(Status$,Error$)
       IF Status$="OK" THEN 
         Telp12_load_s(Status$,Error$)
       END IF
     END IF
     SUBEXIT
   CASE 1,2
   !
   CASE 9                      ! Cassno=9 requires Slotno=99, for Lot end
     Slotno=99
   CASE ELSE
     Status$="ERROR"
     Error$="#CASSNO"
     SUBEXIT
   END SELECT
   !
   SELECT Slotno
   CASE 0                      ! Cassno=0 or Slotno=0 for unload only
     Telp12_cassinfo(Slot,Cass,Waf,Casscount,Status$,Error$)
     IF Slot<>0 THEN 
       Telp12_load(Status$,Error$)
       IF Status$="OK" THEN 
         Telp12_load_s(Status$,Error$)
       END IF
     END IF
     SUBEXIT
   CASE 99
     Cassno=9               ! Slotno=99 requires Cassno=9, for Lot end
   CASE ELSE
     IF (Slotno<1) OR (Slotno>25) THEN 
       Status$="ERROR"
       Error$="#SLOTNO"
       SUBEXIT
     END IF
   END SELECT
   !
   OUTPUT Cmd$ USING "#,A,1Z,2Z";"l",Cassno,Slotno
   Prober_output(Cmd$,Status$,Error$)
   !
   Status$="OK"
   Error$="#TIMEOUT_SRQ"
   !
 SUBEND
 Telp12_sload_s:SUB Telp12_sload_s(INTEGER Cassno,Slotno,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_SLOAD_S
  !  Vers : 1
  !  Desc : [NEW] Loads specified wafer from the specified cassette.
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Cassno          I    -        1 or 2
  !      2 Slotno          I    -        1 to 25
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb,Slot,Waf,Cass,Casscount
   !
   Prober_srq(5,Stb)                               ! Timeout 5   sec
   GOSUB Srq_l
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prb_curr_dx=Prb_init_dx
   Prb_curr_dy=Prb_init_dy
   Prb_curr_mx=Prb_init_mx
   Prb_curr_my=Prb_init_my
   Prb_curr_x=Prb_init_dx+Prb_init_mx
   Prb_curr_y=Prb_init_dy+Prb_init_my
   SUBEXIT
   !
 Srq_l:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 70                                         ! Initial chip (0x46)
     Status$="OK"
     Error$="#INIT_CHIP"
   CASE 72                                         ! Lot end (0x48)
     Status$="END"
     Error$=""
   CASE 74                                         ! Initial wafer (0x4a)
     Prober_srq(10,Stb)                         ! wait for next SRQ
     SELECT Stb
     CASE -1
       Status$="ERROR"
       Error$="#TIMEOUT_SRQ"
     CASE -2
       Status$="ERROR"
       Error$="#TIMEOUT_SPOLL"
     CASE 70                                     ! initial chip (0x46)
       Status$="OK"
       Error$="#INIT_WAFER"
     CASE 80                                       ! prober error
       Prober_output("s",Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
       Prober_enter(Emsg$,Status$,Error$)
       IF Status$<>"OK" THEN SUBEXIT
   !
       Status$="ERROR"
       Error$="#ERROR "&Emsg$
     CASE ELSE
       Status$="ERROR"
       Error$="#SRQ "&VAL$(Stb)
     END SELECT
   CASE 76                                      ! Align Error (0x4b)
     Status$="ERROR"
     Error$="#ALIGN_REJECT"
   CASE 78                                      ! Align Error (0x4b)
     Status$="ERROR"
     Error$="#ALIGN_ASSIST"
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE 101                                        ! No wafer
     Status$="ERROR"
     Error$="#NOWAFER"
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_tempmon:SUB Telp12_tempmon(REAL Montemp,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_TEMPMON
  !  Vers : 1
  !  Desc : Returns hot chuck temperature
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Montemp         R    -        Monitor temperature
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Stb
   !
   Prober_output("f1",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Mtemp$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   ON ERROR GOTO Val_err
   Montemp=VAL(Mtemp$)
   !
   OFF ERROR 
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 Val_err:OFF ERROR 
   Montemp=0
   Status$="ERROR"
   Error$="#INVALID "&Mtemp$
   SUBEXIT
 SUBEND
 Telp12_tempset:SUB Telp12_tempset(REAL Settemp,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_TEMPSET
  !  Vers : 1
  !  Desc : Sets hot chuck temperature
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Measurement Parameters:
  !      1 Settemp         R    -        Set temperature
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Stb
   !
   OUTPUT Cmd$ USING "#,A,3Z";"h",INT(Settemp)          ! Set temp
   Prober_output(Cmd$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prober_srq(100,Stb)
   GOSUB Srq_h
   IF Status$<>"OK" THEN SUBEXIT
   SUBEXIT
   !
 Srq_h:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 89                                         ! Set complete(0x59)
     Status$="OK"
     Error$=""
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_unload:SUB Telp12_unload(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_UNLOAD
  !  Vers : 1
  !  Desc : Returns all the wafers to the original slot
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   ! The following function will unload the current wafer,
   ! and will not load the next one, if P-12 is set to the
   ! non-pipelining mode
   !
   Telp12_load(Status$,Error$)
 SUBEND
 Telp12_unload_s:SUB Telp12_unload_s(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_UNLOAD_S
  !  Vers : 1
  !  Desc : Returns all the wafers to the original slot
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   ! The following function will unload the current wafer,
   ! and will not load the next one, if P-12 is set to the
   ! non-pipelining mode
   !
   Telp12_load_s(Status$,Error$)
 SUBEND
 Telp12_up:SUB Telp12_up(Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_UP
  !  Vers : 1
  !  Desc : Raises the wafer chuck (stage) to contact the probe card
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Status          S    -        "OK" or "ERROR"
  !      2 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   INTEGER Stb
   !
   Prober_output("Z",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prober_srq(5,Stb)
   GOSUB Srq_z
   IF Status$<>"OK" THEN SUBEXIT
   !
   Prober_output("T",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_srq(5,Stb)
   GOSUB Srq_t
   IF Status$<>"OK" THEN SUBEXIT
   SUBEXIT
   !
 Srq_z:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 83                                         ! Z limit error
     Status$="ERROR"
     Error$="#Z_LIMIT"
   CASE 67,73                                      ! Z complete (0x43)
     Status$="OK"
     Error$=""
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE                                       ! unknown
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 Srq_t:SELECT Stb
   CASE -1                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SRQ"
   CASE -2                                         ! timeout
     Status$="ERROR"
     Error$="#TIMEOUT_SPOLL"
   CASE 73,67                                         ! T complete (0x49)
     Status$="OK"
     Error$=""
   CASE 80                                         ! prober error
     Prober_output("s",Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
     Prober_enter(Emsg$,Status$,Error$)
     IF Status$<>"OK" THEN SUBEXIT
   !
     Status$="ERROR"
     Error$="#ERROR "&Emsg$
   CASE ELSE
     Status$="ERROR"
     Error$="#SRQ "&VAL$(Stb)
   END SELECT
   RETURN 
   !
 SUBEND
 Telp12_wafid:SUB Telp12_wafid(Wafid$,Status$,Error$)
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Type : Algorithm
  !  Name : TELP12_WAFID
  !  Vers : 1
  !  Desc : Returns wafer ID on the chuck
  !  Date : 11/15/2006
  !  Time : 03:20:00
  !  User : root
  !
  !***** DON'T REMOVE THIS LINE *************************************
  !
  !  Input Variables:
  !
  !  Output Variables:
  !
  !     #  Name            Type Size     Description
  !    --- --------------- ---- -------- --------------------------------
  !    Output Parameters:
  !      1 Wafid           S    -        ID of wafer on the chuck
  !      2 Status          S    -        "OK" or "ERROR"
  !      3 Error           S    -        Error message
  !
  !***** DON'T REMOVE THIS LINE *************************************
   OPTION BASE 1                !***** DON'T REMOVE THIS LINE *****
   COM /Hp_prbdvr/ Prb_model$[255],INTEGER Prb_address
   COM /Hp_prbdvr/ Prb_parm$[255],Prb_lot$[255],Prb_dev$[255]
   COM /Hp_prbdvr/ INTEGER Prb_diameter,Prb_coord,Prb_flat
   COM /Hp_prbdvr/ REAL Prb_stepx,Prb_stepy
   COM /Hp_prbdvr/ REAL Prb_init_dx,Prb_init_dy,Prb_init_mx,Prb_init_my
   COM /Hp_prbdvr/ REAL Prb_curr_dx,Prb_curr_dy,Prb_curr_mx,Prb_curr_my
   COM /Hp_prbdvr/ REAL Prb_curr_x,Prb_curr_y
   COM /Hp_prbdvr/ Prb_status$[255],Prb_error$[255]
   !
   INTEGER Stb
   DIM Waf_id$[30]
   Wafid$=""
   Waf_id$=""
   !
   Prober_output("n",Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   Prober_enter(Waf_id$,Status$,Error$)
   IF Status$<>"OK" THEN SUBEXIT
   !
   Wafid$=Waf_id$[1;21]
   Status$="OK"
   Error$=""
   SUBEXIT
   !
 SUBEND
 Algo_tail:SUB Algo_tail  !**** DON'T REMOVE THIS SUBPROGRAM ****
 SUBEND

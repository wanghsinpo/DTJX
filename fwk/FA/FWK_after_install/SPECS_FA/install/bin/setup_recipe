#!/usr/bin/ksh
trap "" 23

ECHO=print
FWKDIR=/opt/SPECS/usr/fwk
CFGDIR=/opt/SPECS/sys/config
ORGDIR=/opt/SPECS/install/src
RCPDIR=/opt/SPECS/demo
SYSCONF=sysconf
TMPCONF="$SYSCONF.tmp"

INSDIR=/opt/SPECS/install/bin

SRC_LST="RCPLIB_WAF 	RCPLIB_PRB	RCPLIB_DIE	RCPLIB_MOD
         RCPLIB_TST 	RCPLIB_LMS      RCPLIB_TCO"

TGT_LST="FA_WAF_DIR 	FA_PRB_DIR	FA_DIE_DIR	FA_MOD_DIR
         FA_TST_DIR 	FA_LMS_DIR"

TGT_TPLDIR="FA_TPL_DIR FA_LIM_DIR"


#-[Function]---------------------------------------------
# Back up conf
#  $TARGET must be set before this function is called.
#    $TARGET=$1
#--------------------------------------------------------
backup_conf() {
  TARGET="$CFGDIR/$SYSCONF"

  if [ -f $TARGET ]; then
    CNFUSR=`$INSDIR/get_user $TARGET`
    CNFGRP=`$INSDIR/get_group $TARGET`
    cp -f $TARGET $TARGET.bak
    chown $CNFUSR:$CNFGRP $TARGET.bak
    chmod 644 $TARGET.bak
    $ECHO
    $ECHO "Previous $SYSCONF was saved as $SYSCONF.bak"
  fi
}

#-[Function]---------------------------------------------
# cfprint_val
#  print variable in framework configuration file
#--------------------------------------------------------
cfprint_val() {
    VAR=$1
    SRC=$2

    if [ -f $SRC ]; then
        VAL=`sed -n "/^${VAR}:\(.*\)$/s/^${VAR}: *\(.*\) *$/\1/p" $SRC`
    fi
    while (( ${#VAL} > 0 )); do
        VAL2=${VAL%/}
        if (( ${#VAL} == ${#VAL2} + 1 )); then
            VAL=$VAL2
        else
            break
        fi
    done
    $ECHO $VAL/
}

#-[Function]---------------------------------------------
# print_val
#  print variable in SPECS sysconf
#--------------------------------------------------------
print_val() {
    VAR=$1
    SRC=$2

    if [ -f $SRC ]; then
        VAL=`sed -n "/^${VAR}=\(.*\)$/s/^${VAR}= *\(.*\) *$/\1/p" $SRC`
    fi
    $ECHO $VAL
}

#-[Function]---------------------------------------------
# print_recipe_path
#--------------------------------------------------------
print_recipe_path() {
    rcpdir_lst=$1
    undef_lst=""

    FWK="FRAMEWORK"
    SRC="$CFGDIR/$SYSCONF"

    if [ -f $SRC ]; then
        VAL=`sed -n "/^${FWK}=\(.*\)$/s/^${FWK}= *\(.*\) *$/\1/p" $SRC`
    fi
    FWKCF="$FWKDIR/$VAL.cf"

    $ECHO "Current settings of $VAL.cf:"

    for var in $rcpdir_lst; do
        rcplib=`cfprint_val $var $FWKCF`
        if grep -qe "^$var" $FWKCF; then
            $ECHO "  $var=$rcplib"
        elif [ "$var" != "FA_TCO_DIR" ]; then
            undef_lst="$undef_lst  $var\n"
        fi
    done

    if [ "$undef_lst" != "" ]; then
        $ECHO
        $ECHO "ERROR: The variables do not exist in $FWKCF"
        $ECHO "$undef_lst"
    fi
}

#-[Function]---------------------------------------------
# remove_rcpedit_mlib
#  remove MLIB column in rcpedit
#--------------------------------------------------------
remove_rcpedit_mlib() {
    SRC="$CFGDIR/$SYSCONF"
    VAR1="RCP_ADD_MLIB"
    VAL2=`sed -n "/^${VAR1}=\(.*\)$/s/^${VAR1}= *\(.*\) *$/\1/p" $SRC`

    if [ "$VAL2" != "FALSE" ]; then
        backup_conf
    fi

    if [ -f $SRC ]; then
        sed -e "/^\(${VAR1}=\).*$/s%^\(${VAR1}=\).*$%\1FALSE%" \
            $SRC > $SRC.tmp

        if [ -f $SRC.tmp ]; then
            CNFUSR=`$INSDIR/get_user $SRC`
            CNFGRP=`$INSDIR/get_group $SRC`
            cp -f $SRC.tmp $SRC
            rm -f $SRC.tmp
            chown $CNFUSR:$CNFGRP $SRC
            chmod 644 $SRC
        fi
    fi
}

#-[Function]---------------------------------------------
# set_tplbuild_methods
#  set fa_use_build_files and fa_use_rcp_key
#--------------------------------------------------------
set_tplbuild_methods() {
    VAR1="FA_USE_BUILD_FILES"
    VAR2="FA_USE_RCP_KEY"
    VAR3="FA_MULTIMEAS_MODE"

    $ECHO 
    $ECHO "Will you generate test plan with 'tplbuild' at execution?."
    $ECHO "Type y (yes) or n (no), then  press Return.[quit='q'] : \c"
    read tpl_build
    $ECHO

    if [ "$tpl_build" = "q" ]; then
        exit 
    elif [ "$tpl_build" = "n" ]; then
        BUILD="OFF"
    elif [ "$tpl_build" = "y" ]; then
        BUILD="ON"
    else 
        exit
    fi

    $ECHO "Checking framework configuration files..."
    if [ `ls $FWKDIR/*.cf | wc -l` != 0 ]; then
        for i in $FWKDIR/*.cf; do
            if grep -q $VAR1 $i; then
                sed -e "/^\(${VAR1}:\).*$/s%^\(${VAR1}:\).*$%\1${BUILD}%" $i > $i.tmp
                CNFUSR=`$INSDIR/get_user $i`
                CNFGRP=`$INSDIR/get_group $i`
                cp -f $i.tmp $i
                rm -f $i.tmp
                chmod 666 $i
                chown $CNFUSR:$CNFGRP $i
                $ECHO "Customizing $i..."
            fi
        done
    fi
    $ECHO

    $ECHO "Do you use recipe index (key) to extract test information from a recipe file?"
    $ECHO "Type y (yes) or n (no), then  press Return.[quit='q'] : \c"
    read rcp_key
    $ECHO

    if [ "$rcp_key" = "q" ]; then
        exit 
    elif [ "$rcp_key" = "n" ]; then
        RCP="OFF"
    elif [ "$rcp_key" = "y" ]; then
        RCP="ON"
    else 
        exit
    fi

    if [ "$RCP" = "OFF" ]; then
        $ECHO "Do you use plural measurement libraries at execution?"
        $ECHO "Type y (yes) or n (no), then  press Return.[quit='q'] : \c"
    else
        $ECHO "Do you use recipe index (key) to extract measurement library from a recipe file?"
        $ECHO "Type y (yes) or n (no), then  press Return.[quit='q'] : \c"
    fi
    read mul_lib
    $ECHO

    if [ "$mul_lib" = "q" ]; then
        exit 
    elif [ "$mul_lib" = "n" ]; then
        MLIB="0"
    elif [ "$mul_lib" = "y" ]; then
        if [ "$RCP" = "OFF" ]; then
            MLIB="1"
        else
            MLIB="2"
        fi
    else 
        exit
    fi

    $ECHO "Checking framework configuration files..."
    if [ `ls $FWKDIR/*.cf | wc -l` != 0 ]; then
        for i in $FWKDIR/*.cf; do
            BUF="FALSE"
            CNFUSR=`$INSDIR/get_user $i`
            CNFGRP=`$INSDIR/get_group $i`
            if grep -q $VAR2 $i; then
                sed -e "/^\(${VAR2}:\).*$/s%^\(${VAR2}:\).*$%\1${RCP}%" $i > $i.tmp
                cp -f $i.tmp $i
                rm -f $i.tmp
                chmod 666 $i
                chown $CNFUSR:$CNFGRP $i
                BUF="TRUE"
            fi
            if grep -q $VAR3 $i; then
                sed -e "/^\(${VAR3}:\).*$/s%^\(${VAR3}:\).*$%\1${MLIB}%" $i > $i.tmp
                cp -f $i.tmp $i
                rm -f $i.tmp
                chmod 666 $i
                chown $CNFUSR:$CNFGRP $i
                BUF="TRUE"
            fi
            if [ "$BUF" = "TRUE" ]; then
                $ECHO "Customizing $i..."
            fi
        done
    fi

    TEMPMAK=/opt/SPECS_FA/dmh/vgem/defaults.ini
    if [ -f $TEMPMAK ]; then
        if grep -q ChkRecIDS16 $TEMPMAK; then
            if [ "$RCP" = "OFF" ]; then
                sed -e "s/^VGEM ChkRecIDS16 .*/VGEM ChkRecIDS16 0/" $TEMPMAK > $TEMPMAK.tmp
            else
                sed -e "s/^VGEM ChkRecIDS16 .*/VGEM ChkRecIDS16 1/" $TEMPMAK > $TEMPMAK.tmp
            fi
            mv $TEMPMAK.tmp $TEMPMAK
            chmod 444 $TEMPMAK
            chown root:sys $TEMPMAK
            $ECHO "Customizing $TEMPMAK..."
        fi
    fi

    if [ "$BUILD" = "ON" ]; then
        select_recipe_path
    else
        select_recipe_path2
    fi
    $ECHO
}

#-[Function]---------------------------------------------
# replace_val
#  replace value in framework configuration file
#--------------------------------------------------------
replace_val() {
    VAR=$1
    DIR=$2

    FWK="FRAMEWORK"
    SRC="$CFGDIR/$SYSCONF"

    if [ -f $SRC ]; then
        VAL=`sed -n "/^${FWK}=\(.*\)$/s/^${FWK}= *\(.*\) *$/\1/p" $SRC`
    fi
    FWKCF="$FWKDIR/$VAL.cf"

    if [ -f $FWKCF ]; then
        $ECHO "   Checking $FWKCF configuration files..."
        sed -e "/^\(${VAR}:\).*$/s%^\(${VAR}:\).*$%\1${DIR}%" \
            $FWKCF > $FWKCF.tmp

        if [ -f $FWKCF.tmp ]; then
            CNFUSR=`$INSDIR/get_user $FWKCF`
            CNFGRP=`$INSDIR/get_group $FWKCF`
            cp -f $FWKCF.tmp $FWKCF
            rm -f $FWKCF.tmp
            chown $CNFUSR:$CNFGRP $FWKCF
            chmod 666 $FWKCF
        fi
    fi
    $ECHO
}

#-[Function]---------------------------------------------
# replace_rcplib
#  replace recipe directory in framewrock configuration file
#--------------------------------------------------------
replace_rcplib() {
    VAR=$1
    CUR=$2
    NAME=$3

    $ECHO 
    $ECHO "Enter $NAME directory for SPECS-FA recipe management."
    $ECHO "Current $NAME directory = $CUR"
    $ECHO
    $ECHO "Enter directory name and press return key."
    $ECHO "Default = '$CUR'. [quit='q'] : \c"
    read new_rcplib
    $ECHO

    if [ "$new_rcplib" = "q" ]; then
        print_recipe_path "$TGT_LST $TGT_TPLDIR FA_TCO_DIR"
        exit
    fi
    if [ "$new_rcplib" = "" ]; then
        new_rcplib=$CUR
    fi
    while (( ${#new_rcplib} > 0 )); do
        new_rcplib2=${new_rcplib%/}
        if (( ${#new_rcplib} == ${#new_rcplib2} + 1 )); then
            new_rcplib=$new_rcplib2
        else
            break
        fi
    done

    if [ -d $new_rcplib ]; then
        replace_val $VAR "$new_rcplib"
    else
        $ECHO "ERROR: no such directory. Customization canceled."
        return
    fi
}

#-[Function]---------------------------------------------
# var_to_name
#  variable name to Spec name
#--------------------------------------------------------
var_to_name() {
    case "$1" in
    FA_WAF_DIR) $ECHO "Wafer spec";;
    FA_PRB_DIR) $ECHO "Probe spec";;
    FA_DIE_DIR) $ECHO "Die spec";;
    FA_MOD_DIR) $ECHO "Module spec";;
    FA_TST_DIR) $ECHO "Test spec";;
    FA_LMS_DIR) $ECHO "Limit spec";;
    FA_TCO_DIR) $ECHO "Test plan constant";;
    FA_TPL_DIR) $ECHO "Test plan";;
    FA_LIM_DIR) $ECHO "Limit file";;
    *)          $ECHO "";;
    esac
}

#-[Function]---------------------------------------------
#  sysconf_to_fa
#  SPECS sysconf variable name to FA recipe name
#--------------------------------------------------------
sysconf_to_fa() {
    case "$1" in
    RCPLIB_WAF) $ECHO "FA_WAF_DIR";;
    RCPLIB_PRB) $ECHO "FA_PRB_DIR";;
    RCPLIB_DIE) $ECHO "FA_DIE_DIR";;
    RCPLIB_MOD) $ECHO "FA_MOD_DIR";;
    RCPLIB_TST) $ECHO "FA_TST_DIR";;
    RCPLIB_LMS) $ECHO "FA_LMS_DIR";;
    RCPLIB_TCO) $ECHO "FA_TCO_DIR";;
    *)          $ECHO "";;
    esac
}

#-[Function]---------------------------------------------
# select_recipe_path
#--------------------------------------------------------
select_recipe_path() {
    FWK="FRAMEWORK"
    SRC="$CFGDIR/$SYSCONF"
    if [ -f $SRC ]; then
        VAL=`sed -n "/^${FWK}=\(.*\)$/s/^${FWK}= *\(.*\) *$/\1/p" $SRC`
    fi
    FWKCF="$FWKDIR/$VAL.cf"

    for var in $TGT_LST FA_TCO_DIR; do
        rcplib=`cfprint_val $var $FWKCF`
        name=`var_to_name $var`
        if [ "$name" = "" ]; then
            $ECHO
            $ECHO "ERROR: Unknown character. Canceled."
            $ECHO
            return
        fi
        if grep -qe "^$var" $FWKCF; then
            replace_rcplib $var "$rcplib" "$name"
        fi
    done

    print_recipe_path "$TGT_LST FA_TCO_DIR"

    VAR="FA_TPL_DIR"
    CUR=$RCPDIR
    replace_val $VAR $CUR

    VAR="FA_LIM_DIR"
    CUR=$RCPDIR
    replace_val $VAR $CUR
}

#-[Function]---------------------------------------------
# select_recipe_path2
#--------------------------------------------------------
select_recipe_path2() {
    FWK="FRAMEWORK"
    SRC="$CFGDIR/$SYSCONF"
    if [ -f $SRC ]; then
        VAL=`sed -n "/^${FWK}=\(.*\)$/s/^${FWK}= *\(.*\) *$/\1/p" $SRC`
    fi
    FWKCF="$FWKDIR/$VAL.cf"

    for var in $TGT_TPLDIR FA_TCO_DIR; do
        rcplib=`cfprint_val $var $FWKCF`
        name=`var_to_name $var`
        if [ "$name" = "" ]; then
            $ECHO
            $ECHO "ERROR: Unknown character. Canceled."
            $ECHO
            return
        fi
        if grep -qe "^$var" $FWKCF; then
            replace_rcplib $var "$rcplib" "$name"
        fi
    done

    print_recipe_path "$TGT_TPLDIR FA_TCO_DIR"
}


#=============
# Check user
#=============
ROTUSR=root
ADMUSR=$ROTUSR
ADMUSR=`print_val "ADMIN_USR" $CFGDIR/$SYSCONF`
IDSTR=`id -un`
if [ "$IDSTR" != "$ROTUSR" ] && [ "$IDSTR" != "$ADMUSR" ]; then
    $ECHO "ERROR: You must log in as root or SPECS Administrator."
    exit
fi

#================
# Update sysconf
#================
$INSDIR/update_sysconf

#================
# recipe directory setup
#================
$ECHO
$ECHO "#################################################"
$ECHO
$ECHO "  Setup SPECS-FA Test Plan Build Methods         "
$ECHO "                 and                             "
$ECHO "      Recipe Management Directories.             "
$ECHO
$ECHO "#################################################"
remove_rcpedit_mlib
set_tplbuild_methods

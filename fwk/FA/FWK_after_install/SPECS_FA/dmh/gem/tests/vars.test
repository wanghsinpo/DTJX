
#  starts both gemhost and gemsim
# uses tk send - start dmh_wish in foreground
# 
if {[string compare test [info procs test]] == 1} then {source defs}

global testdir gemsim_pid gemhost_pid gemsim gemhost


test vars-1 {start gemsim} {
    global testdir gemsim_pid gemsim
    set testdir [pwd]
    cd ../equip
    set gemsim gemsim
    set gemsim_pid [exec gemsim &]
    cd $testdir
    expr $gemsim_pid > 0 
} 1

# use send to find gemsim
test vars-2 {send to gemsim} {
    global gemsim gemsim_pid
    wait 5000  ;# allow for init
    send $gemsim set gemsim(comm_state)
} {ENABLED {NOT COMMUNICATING}}
    

test vars-3 {start gemhost} {
  global testdir gemhost gemhost_pid
  cd ../host
  set gemhost gemhost
  set gemhost_pid [exec gemhost &]
  cd $testdir
  expr $gemhost_pid > 0
} 1

# use send to chat with gemhost
test vars-4 {send to gemhost} {
    global gemhost gemhost_pid
    wait 10000  ;# allow for init
    send $gemhost set gemhost(comm_state)
} {COMMUNICATING}

# gemsim should also be talking
test vars-5 {send to gemsim} {
    global gemsim gemsim_pid
    send $gemsim set gemsim(comm_state)
} {COMMUNICATING}

# raise the main windows so any errors are visible
test vars-6 {send to gemsim} {
    global gemsim gemhost
    send $gemsim wm deiconify .
    send $gemhost wm deiconify .
} {}


# test ability to pass variable values through to gemhost
# A {}
# A onetoken
# A {hello world}
test vars-7 {gemsim var set} {
    global gemsim gemhost
    set ID_TSN U4
    set cols \
 "varID varname description varclass value_TSN varmethod varvalue"
    set data [list \
      [list 1000 TestA "Ascii var" SV A {return $varvalue} {}]\
      [list 1001 TestL "List var" SV L {return $varvalue} {}]\
      [list 1002 TestU4 "U4 var" SV U4 {return $varvalue} {}]\
      ]
    foreach record $data { 
        vset $record $cols 
        set reply [send $gemsim SQL "insert into ei_variable (spname,[join $cols ,],ID_TSN)\
 values ('$gemsim', '$varID', '$varname', '$description', \
 '$varclass', '$value_TSN', '$varmethod', '$varvalue', '$ID_TSN')"]
        }
    set reply
} {{//c 0 INSERT:  ei_variable - Row inserted.}}

test vars-8 {host re-init} {
    global gemhost
    set reply [send $gemhost ei_variables_init $gemhost]
} {0}

test vars-9 {host queries null values} {
    global gemhost
    set reply [send $gemhost ei_var_query $gemhost {1000 1001 1002} varID]
} {{A {}} L U4}

test vars-10 {one token values} {
   global gemsim gemhost
    foreach pair {{1000 token} {1001 {{U4 100}}} {1002 1}} {
        vset $pair {varID value}
        set reply [send $gemsim SQL "update ei_variable set varvalue='$value'\
 where varID='$varID'"]
        }
    set reply
} {{//c 0 UPDATE:  ei_variable - 1 row updated.}}

test vars-11 {host queries one token values} {
    global gemhost
    set reply [send $gemhost ei_var_query $gemhost {1000 1001 1002} varID]
} {{A token} {L {U4:1 100}} {U4 1}}

test vars-12 {n token values} {
   global gemsim gemhost
    foreach pair {{1000 {hello world}} {1001 {{U4 100} {U4 102}}} {1002 {1 2}}} {
        vset $pair {varID value}
        set reply [send $gemsim SQL "update ei_variable set varvalue='$value'\
 where varID='$varID'"]
        }
    set reply
} {{//c 0 UPDATE:  ei_variable - 1 row updated.}}

test vars-13 {host queries n token values} {
    global gemhost
    set reply [send $gemhost ei_var_query $gemhost {1000 1001 1002} varID]
} {{A {hello world}} {L {U4:1 100} {U4:1 102}} {U4 1 2}}

test vars-14 {equip has really big value} {
    global gemsim
    set reply [send $gemsim SQL "update ei_variable set varmethod=\
 'append \[info commands\] \[info commands\] \[info commands\] \[info commands\]'\
 where varID='1000'"]
} {{//c 0 UPDATE:  ei_variable - 1 row updated.}}

test vars-15 {host has size overflow feature} {
    global gemhost
    set reply [send $gemhost set gemhost(maxlen_varvalue)]
} {20000}

test vars-16 {host queries big string value} {
    global gemhost
    set reply [send $gemhost expr \[string length \[ei_var_query $gemhost {1000} varID\]\] > 20000]
} {1}

test vars-17 {host queries big string value} {
    global gemhost
    set reply [send $gemhost info exists gemhost(bigvalue_1000)]
} {1}

test vars-18 {equip big value becomes small} {
    global gemsim
    set reply [send $gemsim SQL "update ei_variable set varmethod='return \$varvalue' where varID='1000'"]
} {{//c 0 UPDATE:  ei_variable - 1 row updated.}}

test vars-19 {host queries n token values} {
    global gemhost
    set reply [send $gemhost ei_var_query $gemhost {1000 1001 1002} varID]
} {{A {hello world}} {L {U4:1 100} {U4:1 102}} {U4 1 2}}

test vars-20 {big string value is gone} {
    global gemhost
    set reply [send $gemhost info exists gemhost(bigvalue_1000)]
} {0}

test vars-21 {DVVAL report vars} {
    global gemsim gemhost
    # l3 {tDID DATAID} {tCEID CEID} Ln
    # Ln := [L:2 {tDSID DSID} Lm]*
    set Lm {L {L:2 {U4 375} {U4 30}} {L:2 {U4 376} {U4 20 30 40}}}
    set Ln [list L [list L:2 {U4 1} $Lm]]
    set data [list L {U4 1} {U4 4005} $Ln]
    set reply [send $gemsim eq_checked_put $gemsim 6 3 0 $data]
    wait 3000
    # host should have new variable record, 376, with array value
     set reply [send $gemhost ei_var_query $gemhost {376} varID 0]
} {{U4 20 30 40}}

#################################################
# final shutdown
test vars-end {kill processes} {
    global gemsim gemhost
    send $gemsim "after 1 exit"
    send $gemhost "after 1 exit"
    expr 1
    } 1


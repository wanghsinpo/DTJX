
# starts both supervisor and gemsim
# uses tk send - start dmh_wish in foreground
# 
if {[string compare test [info procs test]] == 1} then {source defs}

global testdir gemsim_pid gemhost_pid gemsim gemhost


test super-1 {start gemsim} {
    global testdir gemsim_pid gemsim
    set testdir [pwd]
    cd ../equip
    set gemsim gemsim
    set gemsim_pid [exec gemsim &]
    cd $testdir
    expr $gemsim_pid > 0 
} 1

# use send to find gemsim
test super-2 {send to gemsim} {
    global gemsim gemsim_pid
    wait 5000  ;# allow for init
    send $gemsim set gemsim(comm_state)
} {ENABLED {NOT COMMUNICATING}}
    

test super-3 {start supervisor} {
  global testdir gemhost gemhost_pid
  cd ../host
  file delete ei_startup.tab
  set gemhost supervisor
  set gemhost_pid [exec supervisor &]
  cd $testdir
  expr $gemhost_pid > 0
} 1

wait 2000  

test super-4 {send to super} {
    global gemhost gemhost_pid 
    # verify default startup record
    set reply [send $gemhost SQL "select * from ei_startup"]
    lindex $reply 4
} {1}

test super-5 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost ei_super_start "where spname='gemhost'"]
} {}

wait 12000

test super-6 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost set gemhost(comm_state)]
} {COMMUNICATING}

# gemsim should also be talking
test super-7 {send to gemsim} {
    global gemsim gemsim_pid
    send $gemsim set gemsim(comm_state)
} {COMMUNICATING}


# now use the supervisor call to stop gemhost

test super-8 {send to super} {
    global gemhost gemhost_pid
    set reply [send $gemhost ei_super_stop {gemhost}]
} {}

wait 3200

test super-9 {verify stop} {
    global gemhost gemhost_pid
    set reply [send $gemhost info commands gemhost]
} {}

# gemsim should also be stopped
test super-10 {send to gemsim} {
    global gemsim gemsim_pid
    send $gemsim set gemsim(comm_state)
} {ENABLED {NOT COMMUNICATING}}

# we still have the variable records
# don't ask for determination but do ask for values except for alarms
test super-11 {init features} {
    global gemhost gemhost_pid
    # turn off init features
    set reply [send $gemhost SQL "update ei_startup set use_s1f11=0, use_s2F29=0, use_s5f5=0, use_s5f7=0"]
    expr [string first "//c 0" $reply] >= 0
} {1}

# while gemhost is down, add new alarms
test super-12 {send to gemsim} {
    global gemsim gemsim_pid
    set reply [send $gemsim eq_alarm_add gemsim 1004 "from test script"]
    expr [string first "//c 0" $reply] >= 0
} {1}

#1004 enabled by default
#1006 not
test super-13 {send to gemsim} {
    global gemsim gemsim_pid
    set reply1 [send $gemsim eq_alarm_add gemsim 1006 "from test script 2"]
    set reply2 [send $gemsim SQL "update ei_alarm set is_enabled=0 where ALID='1006'"]
    list [expr [string first "//c 0" $reply] >= 0] [expr [string first "//c 0" $reply2] >= 0]
} {1 1}


# restart gemhost

test super-14 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost ei_super_start "where spname='gemhost'"]
} {}

wait 12000

test super-15 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost set gemhost(comm_state)]
} {COMMUNICATING}

# gemsim should also be talking
test super-16 {send to gemsim} {
    global gemsim gemsim_pid
    send $gemsim set gemsim(comm_state)
} {COMMUNICATING}

# gemhost should not know about the new alarm
test super-17 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost SQL "select ALID from ei_alarm where ALID='1004'"]
    lindex $reply 4
} {0}


# shutdown gemhost

# now use the supervisor call to stop gemhost

test super-18 {send to super} {
    global gemhost gemhost_pid
    set reply [send $gemhost ei_super_stop {gemhost}]
} {}

wait 3200

test super-19 {verify stop} {
    global gemhost gemhost_pid
    set reply [send $gemhost info commands gemhost]
} {}

# gemsim should also be stopped
test super-20 {send to gemsim} {
    global gemsim gemsim_pid
    send $gemsim set gemsim(comm_state)
} {ENABLED {NOT COMMUNICATING}}

# we still have the variable records
# turn on query for enabled alarms which will see a new alarm type
test super-21 {init features} {
    global gemhost gemhost_pid
    # turn off init features
    set reply [send $gemhost SQL "update ei_startup set use_s1f11=0, use_s2F29=0, use_s5f5=0, use_s5f7=1"]
    expr [string first "//c 0" $reply] >= 0
} {1}


# restart gemhost

test super-22 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost ei_super_start "where spname='gemhost'"]
} {}

wait 12000

test super-23 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost set gemhost(comm_state)]
} {COMMUNICATING}

# gemsim should also be talking
test super-24 {send to gemsim} {
    global gemsim gemsim_pid
    send $gemsim set gemsim(comm_state)
} {COMMUNICATING}

# gemhost should know about the alarm 1004 but not 1006
test super-25 {send to super} {
    global gemhost gemhost_pid
    # start gemhost using default ei_startup record
    set reply [send $gemhost SQL "select ALID from ei_alarm where ALID='1004' or ALID='1006' "]
    lindex $reply 4
} {1}






#################################################
# final shutdown
test super-end {kill processes} {
    global gemsim gemhost
    send $gemsim "after 1 exit"
    send $gemhost "after 1 exit"
    expr 1
    } 1

